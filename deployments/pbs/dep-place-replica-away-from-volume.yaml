# how to demonstrate:
# créer un pv (1000Gi, fiobench-vol, 1 replica, node tag: node1-2)
# replica 1 est sur 10.193.72.32
# l'ajout d'une replica (avec l'UI) la place sur 10.193.72.33

# on conclut que les tests d'architecting-IT ne peut avoir lieu avec la dernière version de Longhorn (ou alors il a omis
# qqch), spécialement le test 9 ou le workload, le volume et la replica sont sur des nodes séparées. C'est dommage de
# ne pas pouvoir assuré que le volume et la replica soit sur des nodes séparés, spécialement dans le cas où on veut
# qu'une seule replica.
# Je pense qu'adapter le test avec 2 replicas pour montrer les effets du networking et comparer avec 1 replica sur le
# même node peut être décent mais est-ce que vous trouvez que c'est intéressant? Les tests 6-9 se réduisent alors
# à 2 test: 1 replica et 2 replicas.

# en effet: https://longhorn.io/docs/1.1.0/volumes-and-nodes/scheduling/#the-node-and-zone-selection-stage
# First, Longhorn will always try to schedule the new replica on a new node with a new zone if possible. In this
# context, “new” means that a replica for the volume has not already been scheduled to the zone or node,
# and “existing” refers to a node or zone that already has a replica scheduled to it.
# les tests comme ceci ne sont pas possible, il faut au moins 2 replicas
apiVersion: v1
kind: PersistentVolume
metadata:
  name: fiobench-pv
  namespace: mercado
  labels:
    fiobench: image
    deployment: test
    subject: place-replica-away-from-volume
spec:
  storageClassName: longhorn-static
  capacity:
    storage: 1000Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  csi:
    driver: driver.longhorn.io
    fsType: ext4
    volumeAttributes:
      numberOfReplicas: '1'
      staleReplicaTimeout: '2880'
      dataLocality: 'disabled'
      nodeSelector: 'node1-2'
    volumeHandle: fiobench-vol # refers to volume on node
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: fiobench-pvc
  namespace: mercado
  labels:
    fiobench: image
    deployment: test
    subject: place-replica-away-from-volume
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1000Gi
  volumeName: fiobench-pv
  storageClassName: longhorn-static
  selector:
    matchLabels:
      fiobench: image
      deployment: test
      subject: place-replica-away-from-volume
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fiobench-deployment
  namespace: mercado
  labels:
    fiobench: image
    deployment: test
    subject: place-replica-away-from-volume
spec:
  replicas: 1
  selector:
    matchLabels:
      fiobench: image
      deployment: test
      subject: place-replica-away-from-volume
  template:
    metadata:
      labels:
        fiobench: image
        deployment: test
        subject: place-replica-away-from-volume
    spec:
      containers:
      - name: fiobench
        image: ghcr.io/pabloheigvd/tb-fiobench:latest
        command: [ "/bin/sh", "run-all-jobs.sh" ]
        volumeMounts:
          - name: fiobench-storage
            mountPath: /data
      nodeSelector:
        kubernetes.io/hostname: "10.193.72.32"
      volumes:
        - name: fiobench-storage
          persistentVolumeClaim:
            claimName: fiobench-pvc
